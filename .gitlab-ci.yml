---
image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
variables:
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}

cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - ${TF_ROOT}/.terraform


stages:
  - linting
  - build
  - plan
  - deploy
  - destroy

# stage linting -------------------------------------------------------------
ansible-lint:
  image: quay.io/ansible/creator-ee:latest
  stage: linting
  script:
    - ansible-lint --force-color -p *
  allow_failure: true

yamllint:
  image: sdesbure/yamllint
  stage: linting
  script:
    - yamllint .
  allow_failure: true

packer_valid:
  image:
    name: registry-gr3.cefim-formation.org/devops/ubuntu-ssh/packer-ansible
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: linting
  script:
    - cd packer
    - packer init .
    - packer validate . 

terraform-valid:
  stage: linting
  before_script:
    - cd ${TF_ROOT}
  script:
    - gitlab-terraform init
    - gitlab-terraform validate

# stage build ---------------------------------------------------------------------

packer:
  image:
    name: registry-gr3.cefim-formation.org/devops/ubuntu-ssh/packer-ansible
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: build
  needs: 
    - job: packer_valid
  script:
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - cd packer
    - packer init .
    - packer build wordpress.pkr.hcl 
    - AMI_ID=$(jq -r '.builds[-1].artifact_id' manifest.json | cut -d ":" -f2)
    - 'curl --request PUT --header "PRIVATE-TOKEN: ${PAT}"  "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/variables/AWS_AMI_ID" --form "value=$AMI_ID"'
#    - packer build wordpress.pkr.hcl 2>&1 | tee output.txt
#    - tail -2 output.txt | head -2 | awk 'match($0, /ami-.*/) { print substr($0, RSTART, RLENGTH) }' > ami.txt
#    - 'curl --request PUT --header "PRIVATE-TOKEN: ${PAT}"  "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/variables/AWS_AMI_ID" --form "value=$(cat ami.txt)"'
  when: manual
  #artifacts:
  #  paths:
  #    - packer/ami.txt

# stage plan ----------------------------------------------------------------------

plan:
  stage: plan
  needs: 
#    - job: packer
    - job: terraform-valid
  before_script:
    - cd ${TF_ROOT}
  script:
    - echo $AWS_AMI_ID
    - gitlab-terraform plan -var="ami_id=$AWS_AMI_ID" 
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
  when: manual

# stage deploy ---------------------------------------------------------------------

terraform-job:
  stage: deploy
  needs: 
#    - job: packer
    - job: terraform-valid
    - job: plan
  before_script:
    - cd ${TF_ROOT}
  script:
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - gitlab-terraform init 
    - gitlab-terraform apply -auto-approve
  when: manual

# stage deploy ---------------------------------------------------------------------

terraform-destroy:
  stage: destroy
  needs: 
    - job: terraform-job
  before_script:
    - cd ${TF_ROOT}
  script:
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
    - gitlab-terraform destroy -var="ami_id=$AWS_AMI_ID" -auto-approve 
  when: manual